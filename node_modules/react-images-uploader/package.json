{
  "_args": [
    [
      {
        "raw": "react-images-uploader",
        "scope": null,
        "escapedName": "react-images-uploader",
        "name": "react-images-uploader",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/DJ/Dropbox/PREWORK_DJ/Code/pup"
    ]
  ],
  "_from": "react-images-uploader@latest",
  "_id": "react-images-uploader@1.1.0",
  "_inCache": true,
  "_location": "/react-images-uploader",
  "_nodeVersion": "6.10.2",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/react-images-uploader-1.1.0.tgz_1500505632530_0.7494021751917899"
  },
  "_npmUser": {
    "name": "aleksei0807",
    "email": "a@guava.by"
  },
  "_npmVersion": "3.10.10",
  "_phantomChildren": {},
  "_requested": {
    "raw": "react-images-uploader",
    "scope": null,
    "escapedName": "react-images-uploader",
    "name": "react-images-uploader",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-images-uploader/-/react-images-uploader-1.1.0.tgz",
  "_shasum": "fef8e6a78b710013e19b67747724fc066512068e",
  "_shrinkwrap": null,
  "_spec": "react-images-uploader",
  "_where": "/Users/DJ/Dropbox/PREWORK_DJ/Code/pup",
  "author": {
    "name": "Aleksei Schurak"
  },
  "bugs": {
    "url": "https://github.com/aleksei0807/react-images-uploader/issues"
  },
  "dependencies": {
    "autobind-decorator": "^1.3.4",
    "babel-core": "^6.20.0",
    "babel-polyfill": "^6.20.0",
    "classnames": "^2.2.5",
    "isomorphic-fetch": "^2.2.1",
    "react": "^15.4.1",
    "react-addons-test-utils": "^15.4.1",
    "react-css-modules": "^4.0.3",
    "react-dom": "^15.4.1",
    "react-dropzone": "^3.7.3",
    "react-hot-loader": "^3.0.0-beta.6",
    "react-progress-button": "git+https://github.com/aleksei0807/react-progress-button.git"
  },
  "description": "React.js component for uploading images to the server",
  "devDependencies": {
    "autoprefixer": "^6.5.3",
    "babel-cli": "^6.9.0",
    "babel-eslint": "^6.1.2",
    "babel-loader": "^6.2.4",
    "babel-plugin-react-autoprefix": "^0.2.6",
    "babel-plugin-transform-class-properties": "^6.9.0",
    "babel-plugin-transform-decorators": "^6.8.0",
    "babel-plugin-transform-decorators-legacy": "^1.3.4",
    "babel-plugin-transform-es2015-modules-amd": "^6.8.0",
    "babel-plugin-transform-es2015-typeof-symbol": "^6.8.0",
    "babel-plugin-transform-flow-strip-types": "^6.18.0",
    "babel-plugin-transform-function-bind": "^6.8.0",
    "babel-plugin-transform-runtime": "^6.15.0",
    "babel-preset-es2015": "^6.9.0",
    "babel-preset-react": "^6.5.0",
    "babel-preset-stage-0": "^6.5.0",
    "babel-preset-stage-1": "^6.5.0",
    "babel-preset-stage-2": "^6.5.0",
    "babel-preset-stage-3": "^6.5.0",
    "babel-runtime": "^6.9.0",
    "css-loader": "^0.26.0",
    "cssnano": "^3.8.1",
    "eslint": "^3.3.1",
    "eslint-config-airbnb": "^10.0.0",
    "eslint-loader": "^1.5.0",
    "eslint-plugin-babel": "^3.3.0",
    "eslint-plugin-import": "^1.13.0",
    "eslint-plugin-jsx-a11y": "^2.0.1",
    "eslint-plugin-mocha": "^2.2.0",
    "eslint-plugin-react": "^6.0.0",
    "file-loader": "^0.9.0",
    "flow-bin": "^0.36.0",
    "gulp": "^3.9.1",
    "gulp-postcss": "^6.2.0",
    "gulp-stylus": "^2.3.1",
    "html-webpack-plugin": "^2.24.1",
    "postcss-easy-import": "^1.0.1",
    "postcss-functions": "^2.1.1",
    "postcss-import": "^8.2.0",
    "postcss-loader": "^1.1.1",
    "postcss-modules": "^0.5.2",
    "precss": "^1.4.0",
    "raw-loader": "^0.5.1",
    "remove-webpack-plugin": "^1.1.1",
    "style-loader": "^0.13.1",
    "webpack": "^1.13.0",
    "webpack-dev-server": "^1.16.2"
  },
  "directories": {},
  "dist": {
    "shasum": "fef8e6a78b710013e19b67747724fc066512068e",
    "tarball": "https://registry.npmjs.org/react-images-uploader/-/react-images-uploader-1.1.0.tgz"
  },
  "gitHead": "14f4bb97c291e94571888c70261cb8131782dffd",
  "homepage": "https://github.com/aleksei0807/react-images-uploader#readme",
  "keywords": [
    "react",
    "components",
    "images",
    "image",
    "upload",
    "uploader",
    "uploading",
    "server",
    "load",
    "loader",
    "загрузка",
    "картинок",
    "изображений",
    "файлов",
    "загрузить",
    "компонент",
    "files",
    "file",
    "input"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "maintainers": [
    {
      "name": "aleksei0807",
      "email": "a@guava.by"
    }
  ],
  "name": "react-images-uploader",
  "optionalDependencies": {},
  "readme": "# React Images Uploader\n\n[![NPM](https://nodei.co/npm/react-images-uploader.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/react-images-uploader/)\n\nReact.js component for uploading images to the server\n\n![Demo](https://cdn.rawgit.com/aleksei0807/react-images-uploader/master/examples/demo.gif \"Demo\")\n\n## Examples\n\n### Example for multiple images:\n\n```javascript\nimport React, { Component } from 'react';\nimport ImagesUploader from 'react-images-uploader';\nimport 'react-images-uploader/styles.css';\nimport 'react-images-uploader/font.css';\n\nexport default class MyUploader extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ImagesUploader\n\t\t\t\turl=\"http://localhost:9090/multiple\"\n\t\t\t\toptimisticPreviews\n\t\t\t\tonLoadEnd={(err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tlabel=\"Upload multiple images\"\n\t\t\t\t/>\n\t\t);\n\t}\n}\n```\n\n### Example for one picture:\n\n```javascript\nimport React, { Component } from 'react';\nimport ImagesUploader from 'react-images-uploader';\nimport 'react-images-uploader/styles.css';\nimport 'react-images-uploader/font.css';\n\nexport default class MyUploader extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<ImagesUploader\n\t\t\t\turl=\"http://localhost:9090/notmultiple\"\n\t\t\t\toptimisticPreviews\n\t\t\t\tmultiple={false}\n\t\t\t\tonLoadEnd={(err) => {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tconsole.error(err);\n\t\t\t\t\t}\n\t\t\t\t}}\n\t\t\t\tlabel=\"Upload a picture\"\n\t\t\t\t/>\n\t\t);\n\t}\n}\n```\n\n### Example server (Node.js, Express)\n\nyou need to install cors-prefetch-middleware and images-upload-middleware from npm.\n\n```javascript\nimport express from 'express';\nimport corsPrefetch from 'cors-prefetch-middleware';\nimport imagesUpload from 'images-upload-middleware';\n\nconst app = express();\n\napp.use('/static', express.static('./server/static'));\n\napp.use(corsPrefetch);\n\napp.post('/multiple', imagesUpload(\n\t'./server/static/multipleFiles',\n\t'http://localhost:9090/static/multipleFiles',\n\ttrue\n));\n\napp.post('/notmultiple', imagesUpload(\n\t'./server/static/files',\n\t'http://localhost:9090/static/files'\n));\n\napp.listen(9090, () => {\n\tconsole.log('Listen: 9090');\n});\n```\n\n## Other servers\n\n- [Server on Go](https://github.com/aleksei0807/imagesServer)\n- [Server on Clojure](https://github.com/aleksei0807/clojure-images-server)\n\n## Props\n\n- `url: string` - server url;\n- `classNamespace: string` - namespace for all classNames (`default: 'iu-'`);\n- `inputId: string` - id and name for hidden input type file. Used for htmlFor in label (`default: 'filesInput'`);\n- `label: string` - label text;\n- `images: Array` - an array of references to the already uploaded images;\n- `disabled: boolean`;\n- `onLoadStart: function()` - callback, which is called when the download starts;\n- `onLoadEnd: function(error: { message: string, ... }, response?: JSON)`\n\n\tError messages:\n\t- `invalid response type` - additional params: response, fileName (imagesUploader);\n\t- `server error` - additional params: status (response status), fileName (imagesUploader);\n\t- `exceeded the number` - if there is `max` property and files count > max;\n\t- `file type error` - additional params: type (file type), fileName (imagesUploader);\n\n- `deleteImage: function(key: number)` - callback which is called when the image has been deleted from the list;\n- `optimisticPreviews: boolean` - enables optimistic previews `default: false`;\n- `multiple: boolean` - allows to upload a bunch of images !`default: true`!;\n- `image: string` - this property works only when multiple: false! already loaded picture;\n- `notification: string` - this property works only with multiple: false! notification text;\n- `max: number` - the maximum number of pictures for a single upload;\n- `color: string` - color for text and svg `default: '#142434'`;\n- `disabledColor: string` - color for text and svg in disabled mode `default: '#bec3c7'`;\n- `borderColor: string` - border color `default: '#a9bac8'`;\n- `disabledBorderColor: string` - border color in disabled mode `default: '#bec3c7'`;\n- `notificationBgColor: string` - background color for notification `default: 'rgba(0, 0, 0, 0.3)'`;\n- `notificationColor: string` - text and svg color for notification `default: '#fafafa'`;\n- `deleteElement: string|element` - element for removing images;\n- `plusElement: string|element` - element for adding images;\n```\nclassNames: {\n\tcontainer: string,\n\tlabel: string,\n\tdeletePreview: string,\n\tloadContainer: string,\n\tdropzone: string,\n\tpseudobutton: string,\n\tpseudobuttonContent: string,\n\timgPreview: string,\n\tfileInput: string,\n\temptyPreview: string,\n\tfilesInputContainer: string,\n\tnotification: string,\n}\n```\n```\nstyles: {\n\tcontainer: Object,\n\tlabel: Object,\n\tdeletePreview: Object,\n\tloadContainer: Object,\n\tdropzone: Object,\n\tpseudobutton: Object,\n\tpseudobuttonContent: Object,\n\timgPreview: Object,\n\tfileInput: Object,\n\temptyPreview: Object,\n\tfilesInputContainer: Object,\n\tnotification: Object,\n}\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/aleksei0807/react-images-uploader.git"
  },
  "scripts": {
    "build": "babel src --out-dir lib && webpack && gulp && cd ./examples/ && webpack",
    "build-server": "babel server/src --out-dir server/lib",
    "dev-server": "cd ./hot-reload && webpack-dev-server --history-api-fallback --config webpack.config.js",
    "start-server": "node server/lib/index.js",
    "test": "echo \"Error: no test specified\" && exit 1",
    "watch-examples": "cd ./examples/ && webpack --watch",
    "watch-styles": "gulp watch"
  },
  "version": "1.1.0"
}
